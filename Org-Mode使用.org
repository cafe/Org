#+TITLE: Org-Mode，最好的文档编辑利器，没有之一

* 超链接和图文混排
超链接也是组织内容的一种非常有效的方式。Org 支持多种超链接。对于符合要求的图片链接，可以形成图文混排。
** 创建链接
对于符合链接规则的内容，org-mode会自动将其视为链接，包括文件、网页、邮箱、新闻组、BBDB数据库项、IRC会话和记录等。下面是一些例子：
http://www.astro.uva.nl/~dominik                        on the web
file:/home/dominik/images/jupiter.jpg                   file, absolute path
/home/dominik/images/jupiter.jpg                        same as above
file:papers/last.pdf                                    another Org file
docview:papers/last.pdf::NNN                            open file in doc-view mode at page NNN
id:B7423F4D-2E8A-471B-8810-C4F074717E9                  Link to heading by ID
news:comp.emacs                                         Usenet link
mailto:adent@galaxy.net                                 Mail link
vm:folder                                               VM folder link
vm:folder#id                                            VM message link
wl:folder#id                                            WANDERLUST message link
mhe:folder#id                                           MH-E message link
rmail:folder#id                                         RMAIL message link
gnus:group#id                                           Gnus article link
bbdb:R.*Stallman                                        BBDB link (with regex)
irc:/irc.com/#emacs/bob                                 IRC link
info:org:External%20links                               Info node link (with encode space)

| Name  | Phone | Age |
|-------+-------+-----|
| Peter | 1234  | 17  |
| Anna  | 3232  | 25  |


** 段落
对于单个回车换行的文件，认为其属于同一个段落。在导出的时候将会转化为不换行的同一段。如果要新起一个段落，需要留出一个空行。这点与MediaWiki类似。

** 列表
Org 能够认识有序列表、无序列表和描述列表
- 无序列表项以‘－’、‘＋’或者‘＊’开头。
- 有序列表项以‘1.’或者‘1）’开头。
- 描述列表用‘::’将项和描述分开。
- 有序列表和无序列表都以缩进表示层级。只要对齐缩进，不管是换行还是分块都认为是处于当前列表项。
同一列表中的项的第一行必须缩进相同程度。当下一行的缩进与列表项的开头的符号或者数字相同或者更小时，这一项就结束了。当所有的项都关上时，或者后面有两个空行时，列表就结束了。例如：
My favorite scenes are (in this order)
1. The attack of the Rohirrim
2. Eowyn's fight with the witch king
   + this was already my favorite scene in the book
   + I really like Miranda Otto.
Important actors in this film are:
- Elijah Wood :: He plays Frodo
- Sean Austin :: He plays Sam, Frodo's friend.

** 标签

*** tag的作用
对于信息的管理，有分类(category)和标签(tag)两种方式。这两种方式各有特点：
通常分类是固定的，很少变化，而tag随时可以增加。分类通常表现为树状结构，比较清晰，但是树状结构过于简单，不能表达复杂的信息。比如，如果有多个分类树，处理起来就会比较麻烦。
所以，这两种方式通常结合起来使用。比如blog系统中，通常既支持文章的分类（树），又支持为每篇文章作tag标记。
org-mode作为 _最好的文档编辑利器_ ，在支持文内大纲（也是树状结构）的同时，还方便的支持tag功能。tag可以在多篇文档中共用。

** 标记tag
在Org-mode中，可以对标题增加tag标记。标记的格式如下：
跟特留尼西特握手                 :苦差:薪水:逃不掉:
而且Org-mode的标签自动按照大纲树的结构继承。即子标题自动继承父标题的标签，比如：
* Metting with the French group                                        :work:
** Summary by Frank                                              :boss:notes:
*** TODO Prepare slides for him                                      :action:
则最后一行标题具有work，boss，notes，action四个标签。
如果希望文档中的所有标题都具有某些标签，只需要定义文档元数据：
#+FILETAGS: :Peter:Boss:Secret:
如果手工输入标签，在标题后设置标签，键入：后，M-Tab自动提供标签的补齐。
更方便的做法是在正文部分用C-c C-q或直接在标题上用C-c C-c创建标签，这种方式可以列出所有预定义的标签以便选取

** 导出和发布
更多：http://orgmode.org/manual/Exporting.html
Org-mode可以完美的编辑，但是最终文档可能需要发布成其他的格式。Org-Mode支持多种文档的输出，包括
- 文本
- 网页
- PDF（需要 Latex 支持）
- XOXO
- FreeMind/Xmind
- Docbook
- iCalendar（苹果 iCal 文件）
- ...
** 准备工作
为了更好的发布文档，还需要做一些准备工作。主要是为文档添加一些“元数据”，使得发布的时候能更好地识别文档的内容。
*** 文档元数据
具体包括：
#+TITLE:             the title to be shown (default is the buffer name)
#+AUTHOR:            the author (default taken from user-full-name)
#+DATE:              a data, an Org timestamp1, or a format string for format-time-string
#+EMAIL:             his/her email address (default from user-mail-address)
#+DESCRIPTION:       the page description, e.g. for the XHTML meta tag
#+KEYWORDS:          the page keywords, e.g. for the XHTML meta tag
#+LANGUAGE:          language for HTML, e.g. 'en' (org-export-default-language)
#+TEXT:              Some descriptive text to be insterted at the begginning.
#+TEXT:              Several lines may be given.
#+OPTIONS:           H:2 num:t toc:t \n:nil @:t ::t |:t ^:t f:t Tex:t ...
#+BIND:              lisp-var lisp-var, e.g.: org-export-latex-low-levels itemize
                     You need to confirm using these, or configure org-export-allow-BIND
#+LINK_UP:           the ``up'' link of an exported page
#+LINK_HOME:         the ``home'' link of an exported page
#+LATEX_HEADER:      extra line(s) for the Latex header, like \usepackage{xyz}
#+EXPORT_SELECT_TAGS: Tags that select a tree for export
#+EXPORT_EXCLUDE_TAGS: Tags that exclude a tree from export
#+XSLT:              the XSLT stylesheet used by DocBook exporter to generrate FO file
其中#+OPTIONS是复合的选项，包括：
H:         set the number of headline levels for export
num:       turn on/off section-numbers
toc:       turn on/off table of contents, or set level limit (integer)
\n:        turn on/off line-break-preservation (DOES NOT WORK)
@:         turn on/off quoted HTML tags
::         turn on/off fixed-width sections
| :        turn on/off tables
^:         turn on/off TeX-like syntax for sub- and superscripts. If
           you write "^:{}", a_{b} will be interpreted, but
           the simple a_b will be left as it is.
-:         turn on/off conversion of special strings.
f:         turn on/off footnotes like this[1].
todo:      turn on/off inclusion of TODO keywords into exported text
tasks:     turn on/off inclusion of tasks (TODO items), can be nil to remove
           all tasks, todo to remove DONE tasks, or list of kwds to keep
pri:       turn on/off priority cookies
tags:      turn on/off inclusion of tags, may also be not-in-toc
<:         turn on/off inclusion of any time/date stamps like DEADLINES
*:         turn on/off emphasized text (bold, italic, underlined)
TeX:       turn on/off simple TeX macros in plain text
LaTeX:     configure export of LaTeX fragments.  Default auto
skip:      turn on/off skipping the text before the first heading
author:    turn on/off inclusion of author name/email into exported file
email:     turn on/off inclusion of author email into exported file
creator:   turn on/off inclusion of creator info into exported file
timestamp: turn on/off inclusion creation time into exported file
d:         turn on/off inclusion of drawers
这些元数据可以根据需要设置。建议放在文档的开关部分。如，本文采用的元数据如下：
#+TITLE: org-mode: 最好的文档编辑利器，没有之一
#+AUTHOR: Holbrook Wong
#+EMAIL: wanghaikuo@gmail.com
#+KEYWORDS: emacs, org-mode
#+OPTIONS: H:4 toc:t
*** 内容元数据
通常在行首以“＃”开头，可以有多种用途。
- 分行区块
默认内容不换行，需要留出空行才能换行。定义了分行的区块可以实现普通换行：
#+BEGIN_VERSE
Great clouds overhead
Tiny black birds rise and fall
Snow covers Emacs
   -- AlexSchroeder
#+END_VERSE
- 缩进区块
通常用于引用，与默认格式相比左右都会留出缩进：
#+BEGIN_QUOTE
缩进区块
#+END_QUOTE
- 居中区块
#+BEGIN_CENTER
Everything should be made as simple a possible, \\
but not any simpler
#+END_CENTER
- 代码区块
#+BEGIN_SRC ruby
require 'redcarpet'
md = Redcarpet.new("Hello, world.")
puts md.to_html
#+BEGIN_SRC
- 例子
: 单行的例子以冒号开头
#+BEGIN_EXAMPLE
多行的例子
使用区块
#+END_EXAMPLE
- 注释
以‘＃’开头的行被看作注释，不会被导出
区块注释采用如下写法：
#+BEGIN_COMMMENT
块注释
...
#+END_COMMENT
- 表格与图片
对于表格和图片，可以在前面增加标题和标签的说明，以方便交叉引用。
比如在表格的前面添加：
#+CAPTION: This is the caption for the next table (or link)
#+LABEL: tbl:table1
则在需要的地方可以通过
\ref{table}
来引用该表格。
*** 嵌入Html
对于导出html以及发布，嵌入html代码就很有用。比如下面的例子适用于格式化为cnblogs的代码块：
#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:cpp">
int main()
{
    return 0;
}
</pre>
</div>
#+END_HTML
